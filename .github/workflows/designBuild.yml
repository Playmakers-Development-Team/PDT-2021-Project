on:
  push:
    branches:
      - gold/design/build

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  checklicense:
    name: check if UNITY_LICENSE is set in github secrets
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checklicense_job
        run: |
          echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
          echo "::set-output name=is_unity_license_set::${{ env.UNITY_LICENSE != '' }}"

  activation:
    needs: [ checklicense ]
    if: needs.checklicense.outputs.is_unity_license_set == 'false'
    name: Request activation file ðŸ”‘
    runs-on: ubuntu-latest
    steps:
      # Request manual activation file
      - name: Request manual activation file
        id: getManualLicenseFile
        # https://github.com/game-ci/unity-request-activation-file/releases/
        uses: game-ci/unity-request-activation-file@v2.0-alpha-1
      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - name: Expose as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.getManualLicenseFile.outputs.filePath }}
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  build:
    needs: [ checklicense ]
    if: needs.checklicense.outputs.is_unity_license_set == 'true'
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
#          - StandaloneOSX
            - StandaloneWindows64
            - StandaloneLinux64
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Library
        uses: actions/cache@v2.1.3
        with:
          path: ${{ env.GITHUB_WORKSPACE }}/Library
          key: Library-${{ env.GITHUB_WORKSPACE }}-${{ matrix.targetPlatform }}
      - name: Unity Builder
        uses: game-ci/unity-builder@v2
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildMethod: Editor.BuildWindow.Build${{ matrix.targetPlatform }}
      - name: UNIX Post Process - Permissions
        if: ${{ matrix.targetPlatform == 'StandaloneOSX' || matrix.targetPlatform == 'StandaloneLinux64' }}
        run: |
          sudo chmod -R +x build
          tar -cvf build.tar build
      - name: UNIX Upload
        uses: actions/upload-artifact@v2
        if: ${{ matrix.targetPlatform == 'StandaloneOSX' || matrix.targetPlatform == 'StandaloneLinux64' }}
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build.tar
      - name: Normal Upload
        uses: actions/upload-artifact@v2
        if: ${{ matrix.targetPlatform != 'StandaloneOSX' }}
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build